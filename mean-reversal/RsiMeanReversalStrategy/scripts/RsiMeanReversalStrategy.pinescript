// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © Medvidek

//@version=5
//@Author: @GeorgeFreelanceDeveloper, @LucyFreelanceDeveloper
strategy("RSI Mean Reversal Strategy", overlay=true, margin_long=100, margin_short=100)

// ********************************
// User defined inputs
// ********************************
var G_BASIC_SETTINGS = "Basic settings"
var G_ADVANCE_SETTINGS = "Advance settings"
var G_TIME = "Time settings"

rsiLength = input.int(defval = 2, title = "RSI length", group = G_BASIC_SETTINGS)
entryRsiLevel = input.int(defval = 20, title = "Entry RSI level", group = G_BASIC_SETTINGS)
exitRsiLevel = input.int(defval = 70, title = "Exit RSI level", group = G_BASIC_SETTINGS)
atrStopLossMultiplier = input.int(defval = 2, title = "ATR stop loss multiplier")

enableContext = input.bool(defval = true, title = "Enable context", group = G_ADVANCE_SETTINGS)
enableAtrStop = input.bool(defval = true, title = "Enable ATR stop")

fromDateTime = input.time(defval = timestamp("2012-01-01T01:01+0000"), title = "From Date and time", group = G_TIME) 
toDateTime = input.time(defval = timestamp("9999-01-01T01:01+0000"), title = "To Date and time", group = G_TIME)


// ********************************
// Functions
// ********************************
tradeDateIsAllowed() => time >= fromDateTime and time <= toDateTime

// **********************************
// Perform calculations and analysis
// **********************************
var float stopLossPrice = 0

rsi = ta.rsi(close,rsiLength)
sma200 = ta.sma(close, 200)
filter = enableContext ? close > sma200 : true

entryCondition = rsi <= entryRsiLevel and filter and tradeDateIsAllowed()
exitCondition = rsi >= exitRsiLevel or (enableAtrStop and close < stopLossPrice)

// ********************************
// Draw outputs
// ********************************


// ********************************
// Manage trade
// ********************************
if entryCondition
    stopLossPrice := close - (ta.atr(14) * atrStopLossMultiplier)
    strategy.entry("Long", strategy.long)
if exitCondition
    strategy.close("Long")
